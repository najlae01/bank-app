// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bank_app.Data;

#nullable disable

namespace bank_app.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230611103236_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("bank_app.Models.Compte", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Comptes");
                });

            modelBuilder.Entity("bank_app.Models.Mouvement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("compte_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_mnt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("montant")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("compte_id");

                    b.ToTable("Mouvements");
                });

            modelBuilder.Entity("bank_app.Models.Mouvement", b =>
                {
                    b.HasOne("bank_app.Models.Compte", "compte")
                        .WithMany("mouvements")
                        .HasForeignKey("compte_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compte");
                });

            modelBuilder.Entity("bank_app.Models.Compte", b =>
                {
                    b.Navigation("mouvements");
                });
#pragma warning restore 612, 618
        }
    }
}
